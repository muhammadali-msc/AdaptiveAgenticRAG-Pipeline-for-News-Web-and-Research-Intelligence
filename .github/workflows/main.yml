name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-ecr-images:
    name: Continuous Delivery (Docker Compose)
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECRs
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Create .env file for Compose
        run: |
          echo "ECR_URI=${{ secrets.AWS_ECR_LOGIN_URI }}" >> .env
          echo "ECR_REPOSITORY_NAME=${{ secrets.ECR_REPOSITORY_NAME }}" >> .env
          
      - name: Build backend and frontend images using Docker Compose
        run: docker compose -f docker-compose.yml build

      - name: Push backend image to ECR
        run: docker push ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:backend-latest

      - name: Push frontend image to ECR
        run: docker push ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:frontend-latest

  deploy-to-ec2:
    name: Continuous Deployment to EC2
    needs: build-and-push-ecr-images
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull latest images
        run: |
          docker pull ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:backend-latest
          docker pull ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:frontend-latest

      - name: Stop and remove existing containers
        run: |
          docker rm -f backend-app || true
          docker rm -f frontend-app || true

      - name: Run Backend Container
        run: |
          docker run -d --name backend-app -p 8000:8000 \
          ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:backend-latest

      - name: Run Frontend Container
        run: |
          docker run -d --name frontend-app -p 3000:3000 \
          ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:frontend-latest

      - name: Clean up Docker System
        run: docker system prune -f
